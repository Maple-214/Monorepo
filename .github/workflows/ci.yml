name: CI/CD

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

  # 手动触发（用于部署）
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # 1️⃣ 变更分析
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      app1: ${{ steps.filter.outputs.app1 }}
      app2: ${{ steps.filter.outputs.app2 }}
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            web:
              - 'apps/web/**'
            app1:
              - 'apps/app1/**'
            app2:
              - 'apps/app2/**'
            packages:
              - 'packages/**'
              - 'pnpm-workspace.yaml'
              - 'package.json'
              - 'turbo.json'
              - 'tsconfig*.json'

  # 2️⃣ 构建 web
  build-web:
    needs: changes
    if: |
      github.event_name == 'pull_request' &&
      (needs.changes.outputs.web == 'true' || needs.changes.outputs.packages == 'true') &&
      needs.changes.outputs.app1 != 'true' && needs.changes.outputs.app2 != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint --filter web
      - run: pnpm typecheck --filter web
      - run: pnpm build --filter web
      - run: pnpm test --filter web
      - uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: apps/web/dist

  # 3️⃣ 构建 app1
  build-app1:
    needs: changes
    if: |
      github.event_name == 'pull_request' &&
      (needs.changes.outputs.app1 == 'true' || needs.changes.outputs.packages == 'true') &&
      needs.changes.outputs.app2 != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint --filter app1
      - run: pnpm typecheck --filter app1
      - run: pnpm build --filter app1
      - run: pnpm test --filter app1
      - uses: actions/upload-artifact@v4
        with:
          name: app1-remote
          path: apps/app1/dist

  # 4️⃣ 构建 app2
  build-app2:
    needs: changes
    if: |
      github.event_name == 'pull_request' &&
      (needs.changes.outputs.app2 == 'true' || needs.changes.outputs.packages == 'true') &&
      needs.changes.outputs.app1 != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint --filter app2
      - run: pnpm typecheck --filter app2
      - run: pnpm build --filter app2
      - run: pnpm test --filter app2
      - uses: actions/upload-artifact@v4
        with:
          name: app2-remote
          path: apps/app2/dist

  # 5️⃣ 全量兜底
  build-all:
    needs: changes
    if: |
      github.event_name == 'push' ||
      (
        github.event_name == 'pull_request' &&
        (
          (needs.changes.outputs.app1 == 'true' && needs.changes.outputs.app2 == 'true') ||
          (needs.changes.outputs.web == 'true' && (needs.changes.outputs.app1 == 'true' || needs.changes.outputs.app2 == 'true'))
        )
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm typecheck
      - run: pnpm build
      - run: pnpm test
      - uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: apps/web/dist
      - uses: actions/upload-artifact@v4
        with:
          name: app1-remote
          path: apps/app1/dist
      - uses: actions/upload-artifact@v4
        with:
          name: app2-remote
          path: apps/app2/dist

  # 6️⃣ Docker 构建 & 推送（仅手动触发）
  docker:
    runs-on: ubuntu-latest
    needs: build-all
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker images
        run: |
          docker build -t myorg/web:latest -f apps/web/Dockerfile .
          docker build -t myorg/app1:latest -f apps/app1/Dockerfile .
          docker build -t myorg/app2:latest -f apps/app2/Dockerfile .
      - name: Push Docker images
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push myorg/web:latest
          docker push myorg/app1:latest
          docker push myorg/app2:latest
