name: CI/CD

on:
  # PR 和 push 都会触发 CI 验证流程
  pull_request:
  push:
    branches: [master]

  # 手动触发部署
  workflow_dispatch:

# 防止重复任务浪费
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # 1️⃣ 常规 CI 验证
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: corepack enable

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Turbo cache
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  # 2️⃣ Docker 打包 & 推送（仅手动触发）
  docker:
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker build -t myorg/web:latest -f apps/web/Dockerfile .
          docker build -t myorg/app1:latest -f apps/app1/Dockerfile .
          docker build -t myorg/app2:latest -f apps/app2/Dockerfile .

      - name: Push Docker images
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push myorg/web:latest
          docker push myorg/app1:latest
          docker push myorg/app2:latest
